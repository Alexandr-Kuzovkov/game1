# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := lwgeom
DEFS_Debug := \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DDEBUG' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-fPIC \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-pthread \
	-m64 \
	-g \
	-O0

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-fno-exceptions

INCS_Debug := \
	-I$(srcdir)/src/spatialite/deps/proj/proj/src \
	-I$(srcdir)/src/spatialite/deps/geos/geos/capi \
	-I$(srcdir)/src/spatialite/deps/geos/geos/include \
	-I$(srcdir)/src/spatialite/deps/lwgeom/config/linux/x64 \
	-I$(srcdir)/src/spatialite/deps/lwgeom/lwgeom \
	-I/home/vagrant/.node-gyp/0.10.33/src \
	-I/home/vagrant/.node-gyp/0.10.33/deps/uv/include \
	-I/home/vagrant/.node-gyp/0.10.33/deps/v8/include

DEFS_Release := \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DNDEBUG'

# Flags passed to all source files.
CFLAGS_Release := \
	-fPIC \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-pthread \
	-m64 \
	-O2 \
	-fno-strict-aliasing \
	-fno-tree-vrp \
	-fno-omit-frame-pointer

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-fno-exceptions

INCS_Release := \
	-I$(srcdir)/src/spatialite/deps/proj/proj/src \
	-I$(srcdir)/src/spatialite/deps/geos/geos/capi \
	-I$(srcdir)/src/spatialite/deps/geos/geos/include \
	-I$(srcdir)/src/spatialite/deps/lwgeom/config/linux/x64 \
	-I$(srcdir)/src/spatialite/deps/lwgeom/lwgeom \
	-I/home/vagrant/.node-gyp/0.10.33/src \
	-I/home/vagrant/.node-gyp/0.10.33/deps/uv/include \
	-I/home/vagrant/.node-gyp/0.10.33/deps/v8/include

OBJS := \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/box2d.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/g_box.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/g_serialized.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/g_util.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/libtgeom.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwalgorithm.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwcircstring.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwcollection.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwcompound.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwcurvepoly.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwgeodetic.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwgeom.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwgeom_api.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwgeom_debug.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwgeom_geos.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwgeom_geos_clean.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwgeom_geos_node.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwgeom_geos_split.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwgeom_transform.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwhomogenize.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwin_wkb.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwin_wkt.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwin_wkt_lex.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwin_wkt_parse.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwline.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwlinearreferencing.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwmcurve.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwmline.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwmpoint.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwmpoly.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwmsurface.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwout_geojson.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwout_gml.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwout_kml.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwout_svg.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwout_wkb.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwout_wkt.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwout_x3d.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwpoint.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwpoly.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwprint.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwpsurface.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwsegmentize.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwspheroid.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwtin.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwtree.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwtriangle.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/lwutil.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/measures.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/measures3d.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/ptarray.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/snprintf.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/stringbuffer.o \
	$(obj).target/$(TARGET)/src/spatialite/deps/lwgeom/lwgeom/vsprintf.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-pthread \
	-rdynamic \
	-m64

LDFLAGS_Release := \
	-pthread \
	-rdynamic \
	-m64

LIBS :=

$(obj).target/src/spatialite/deps/lwgeom/lwgeom.a: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/src/spatialite/deps/lwgeom/lwgeom.a: LIBS := $(LIBS)
$(obj).target/src/spatialite/deps/lwgeom/lwgeom.a: TOOLSET := $(TOOLSET)
$(obj).target/src/spatialite/deps/lwgeom/lwgeom.a: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,alink)

all_deps += $(obj).target/src/spatialite/deps/lwgeom/lwgeom.a
# Add target alias
.PHONY: lwgeom
lwgeom: $(obj).target/src/spatialite/deps/lwgeom/lwgeom.a

# Add target alias to "all" target.
.PHONY: all
all: lwgeom

# Add target alias
.PHONY: lwgeom
lwgeom: $(builddir)/lwgeom.a

# Copy this to the static library output path.
$(builddir)/lwgeom.a: TOOLSET := $(TOOLSET)
$(builddir)/lwgeom.a: $(obj).target/src/spatialite/deps/lwgeom/lwgeom.a FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/lwgeom.a
# Short alias for building this static library.
.PHONY: lwgeom.a
lwgeom.a: $(obj).target/src/spatialite/deps/lwgeom/lwgeom.a $(builddir)/lwgeom.a

# Add static library to "all" target.
.PHONY: all
all: $(builddir)/lwgeom.a

